
blink.elf:     file format elf32-msp430


Disassembly of section .text:

0000c000 <__watchdog_support>:
    c000:	55 42 20 01 	mov.b	&0x0120,r5	
    c004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    c008:	82 45 02 02 	mov	r5,	&0x0202	

0000c00c <__init_stack>:
    c00c:	31 40 00 04 	mov	#1024,	r1	;#0x0400

0000c010 <__do_copy_data>:
    c010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    c014:	0f 93       	tst	r15		
    c016:	08 24       	jz	$+18     	;abs 0xc028
    c018:	92 42 02 02 	mov	&0x0202,&0x0120	
    c01c:	20 01 
    c01e:	2f 83       	decd	r15		
    c020:	9f 4f ce c0 	mov	-16178(r15),512(r15);0xc0ce(r15), 0x0200(r15)
    c024:	00 02 
    c026:	f8 23       	jnz	$-14     	;abs 0xc018

0000c028 <__do_clear_bss>:
    c028:	3f 40 02 00 	mov	#2,	r15	;#0x0002
    c02c:	0f 93       	tst	r15		
    c02e:	07 24       	jz	$+16     	;abs 0xc03e
    c030:	92 42 02 02 	mov	&0x0202,&0x0120	
    c034:	20 01 
    c036:	1f 83       	dec	r15		
    c038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    c03c:	f9 23       	jnz	$-12     	;abs 0xc030

0000c03e <main>:
    c03e:	04 41       	mov	r1,	r4	
    c040:	24 53       	incd	r4		
    c042:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    c046:	20 01 
    c048:	5f 42 21 00 	mov.b	&0x0021,r15	
    c04c:	5f d3       	bis.b	#1,	r15	;r3 As==01
    c04e:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    c052:	5f 42 21 00 	mov.b	&0x0021,r15	
    c056:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    c05a:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    c05e:	5f 42 22 00 	mov.b	&0x0022,r15	
    c062:	7f d0 41 00 	bis.b	#65,	r15	;#0x0041
    c066:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    c06a:	3e 40 a6 c0 	mov	#-16218,r14	;#0xc0a6
    c06e:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    c072:	8e 12       	call	r14		
    c074:	82 43 00 02 	mov	#0,	&0x0200	;r3 As==00
    c078:	05 3c       	jmp	$+12     	;abs 0xc084
    c07a:	1f 42 00 02 	mov	&0x0200,r15	
    c07e:	1f 53       	inc	r15		
    c080:	82 4f 00 02 	mov	r15,	&0x0200	
    c084:	1f 42 00 02 	mov	&0x0200,r15	
    c088:	3f 90 14 82 	cmp	#-32236,r15	;#0x8214
    c08c:	f6 2b       	jnc	$-18     	;abs 0xc07a
    c08e:	5f 42 21 00 	mov.b	&0x0021,r15	
    c092:	7f e0 41 00 	xor.b	#65,	r15	;#0x0041
    c096:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    c09a:	e7 3f       	jmp	$-48     	;abs 0xc06a

0000c09c <__stop_progExec__>:
    c09c:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    c0a0:	fd 3f       	jmp	$-4      	;abs 0xc09c

0000c0a2 <__ctors_end>:
    c0a2:	30 40 cc c0 	br	#0xc0cc	

0000c0a6 <delay>:
    c0a6:	04 12       	push	r4		
    c0a8:	04 41       	mov	r1,	r4	
    c0aa:	24 53       	incd	r4		
    c0ac:	21 83       	decd	r1		
    c0ae:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    c0b2:	03 43       	nop			
    c0b4:	5f 43       	mov.b	#1,	r15	;r3 As==01
    c0b6:	94 93 fc ff 	cmp	#1,	-4(r4)	;r3 As==01, 0xfffc(r4)
    c0ba:	01 34       	jge	$+4      	;abs 0xc0be
    c0bc:	4f 43       	clr.b	r15		
    c0be:	b4 53 fc ff 	add	#-1,	-4(r4)	;r3 As==11, 0xfffc(r4)
    c0c2:	4f 93       	tst.b	r15		
    c0c4:	f7 23       	jnz	$-16     	;abs 0xc0b4
    c0c6:	21 53       	incd	r1		
    c0c8:	34 41       	pop	r4		
    c0ca:	30 41       	ret			

0000c0cc <_unexpected_>:
    c0cc:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	a2 c0 a2 c0 a2 c0 a2 c0 a2 c0 a2 c0 a2 c0 a2 c0     ................
    fff0:	a2 c0 a2 c0 a2 c0 a2 c0 a2 c0 a2 c0 a2 c0 00 c0     ................
